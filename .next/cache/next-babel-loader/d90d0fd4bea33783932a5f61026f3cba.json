{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_POPULAR_MOVIES, FETCH_MOVIES_BY_KEYWORD, FETCH_MOVIE_DETAILS } from '../actions/types';\nconst initialState = {\n  movies: [],\n  numOfPages: 1\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n\n    case FETCH_POPULAR_MOVIES:\n      return _objectSpread({}, state, {\n        movies: action.payload.data,\n        numOfPages: action.payload.numOfPages\n      });\n\n    case FETCH_MOVIES_BY_KEYWORD:\n      if (action.payload.data.length > 1) {\n        return _objectSpread({}, state, {\n          movies: action.payload.data,\n          numOfPages: action.payload.numOfPages\n        });\n      } else {\n        return _objectSpread({}, state);\n      }\n\n    case FETCH_MOVIE_DETAILS:\n      return _objectSpread({}, state, {\n        movieDetails: action.payload.data\n      });\n  }\n});","map":{"version":3,"sources":["/Users/milanblaz/Documents/Projects/vivant_movies/src/redux/reducers/moviesReducer.js"],"names":["FETCH_POPULAR_MOVIES","FETCH_MOVIES_BY_KEYWORD","FETCH_MOVIE_DETAILS","initialState","movies","numOfPages","state","action","type","payload","data","length","movieDetails"],"mappings":";;;;;;;;;;;;AAAA,SACEA,oBADF,EAEEC,uBAFF,EAGEC,mBAHF,QAIO,kBAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;AAKA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE;AACE,aAAOF,KAAP;;AACF,SAAKN,oBAAL;AACE,+BACKM,KADL;AAEEF,QAAAA,MAAM,EAAEG,MAAM,CAACE,OAAP,CAAeC,IAFzB;AAGEL,QAAAA,UAAU,EAAEE,MAAM,CAACE,OAAP,CAAeJ;AAH7B;;AAKF,SAAKJ,uBAAL;AACE,UAAIM,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBC,MAApB,GAA6B,CAAjC,EAAoC;AAClC,iCACKL,KADL;AAEEF,UAAAA,MAAM,EAAEG,MAAM,CAACE,OAAP,CAAeC,IAFzB;AAGEL,UAAAA,UAAU,EAAEE,MAAM,CAACE,OAAP,CAAeJ;AAH7B;AAKD,OAND,MAMO;AACL,iCAAYC,KAAZ;AACD;;AACH,SAAKJ,mBAAL;AACE,+BACKI,KADL;AAEEM,QAAAA,YAAY,EAAEL,MAAM,CAACE,OAAP,CAAeC;AAF/B;AApBJ;AAyBD,CA1BD","sourcesContent":["import {\n  FETCH_POPULAR_MOVIES,\n  FETCH_MOVIES_BY_KEYWORD,\n  FETCH_MOVIE_DETAILS\n} from '../actions/types';\n\nconst initialState = {\n  movies: [],\n  numOfPages: 1\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n    case FETCH_POPULAR_MOVIES:\n      return {\n        ...state,\n        movies: action.payload.data,\n        numOfPages: action.payload.numOfPages\n      };\n    case FETCH_MOVIES_BY_KEYWORD:\n      if (action.payload.data.length > 1) {\n        return {\n          ...state,\n          movies: action.payload.data,\n          numOfPages: action.payload.numOfPages\n        };\n      } else {\n        return { ...state };\n      }\n    case FETCH_MOVIE_DETAILS:\n      return {\n        ...state,\n        movieDetails: action.payload.data\n      };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}