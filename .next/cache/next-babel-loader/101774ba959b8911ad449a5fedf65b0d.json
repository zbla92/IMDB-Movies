{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/milanblaz/Documents/Projects/vivant_movies/src/components/Header/index.js\";\nvar __jsx = React.createElement;\nimport './index.scss';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter, Link } from 'react-router-dom';\nimport { fetchMoviesByKeyword } from '../../redux/actions/movies';\nimport { setFilters } from '../../redux/actions/ui'; //ICONS\n\nimport { IoMdGrid, IoIosList } from 'react-icons/io';\n\nclass Header extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      keyword: ''\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      this.setState({\n        keyword: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"onSubmit\", e => {\n      e.preventDefault();\n      this.props.fetchMoviesByKeyword(this.state.keyword).catch(ex => {\n        alert('Something failed');\n        this.props.setFilters('popular');\n      });\n      this.setState({\n        keyword: ''\n      });\n      this.props.setFilters('search');\n      this.handleOpen();\n    });\n\n    _defineProperty(this, \"onLogoClick\", () => {\n      this.props.setFilters('popular');\n      this.props.history.push(\"/gridView/1\");\n      window.scrollTo(0, 0);\n    });\n\n    _defineProperty(this, \"handleOpen\", () => {\n      if (window.innerWidth < 1024) {\n        var burger = document.querySelector('.burger');\n        var nav = document.querySelector('#navMenu');\n        burger.classList.toggle('is-active');\n        nav.classList.toggle('navbar__menu--is-active');\n      }\n    });\n  }\n\n  render() {\n    const {\n      location: {\n        pathname\n      }\n    } = this.props;\n\n    const page = _parseInt(pathname.split('/').pop(), 10);\n\n    return __jsx(\"nav\", {\n      className: \"navbar\",\n      role: \"navigation\",\n      \"aria-label\": \"main navigation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"navbar-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(Link, {\n      to: \"/gridView/1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: this.props.logo,\n      className: \"navbar-brand__image\",\n      alt: \"logo\",\n      onClick: () => this.onLogoClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), __jsx(\"span\", {\n      className: \"navbar-burger burger is-vcentered\",\n      \"data-target\": \"navMenu\",\n      onClick: e => {\n        this.handleOpen();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      id: \"navMenu\",\n      className: \"navbar-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"navbar__form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      className: \"input is-rounded navbar__form__search is-vcentered\",\n      type: \"text\",\n      value: this.state.keyword,\n      placeholder: \"Search Vivant Movie Database\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"navbar__view navbar-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(Link, {\n      to: \"/gridView/\".concat(page),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, __jsx(IoMdGrid, {\n      className: pathname.indexOf('gridView') > 0 ? 'navbar__view__active' : 'navbar__view__non-active',\n      onClick: e => {\n        this.handleOpen();\n        window.scrollTo(0, 0);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), __jsx(Link, {\n      to: \"/tableView/\".concat(page),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(IoIosList, {\n      className: pathname.indexOf('tableView') > 0 ? 'navbar__view__active' : 'navbar__view__non-active',\n      onClick: e => {\n        this.handleOpen();\n        window.scrollTo(0, 0);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nHeader.propTypes = {\n  setFilters: PropTypes.func.isRequired,\n  fetchMoviesByKeyword: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired\n};\nconst mapActionsToProps = {\n  setFilters,\n  fetchMoviesByKeyword\n};\nexport default connect(null, mapActionsToProps)(withRouter(Header));","map":{"version":3,"sources":["/Users/milanblaz/Documents/Projects/vivant_movies/src/components/Header/index.js"],"names":["React","connect","PropTypes","withRouter","Link","fetchMoviesByKeyword","setFilters","IoMdGrid","IoIosList","Header","Component","keyword","e","setState","target","value","preventDefault","props","state","catch","ex","alert","handleOpen","history","push","window","scrollTo","innerWidth","burger","document","querySelector","nav","classList","toggle","render","location","pathname","page","split","pop","logo","onLogoClick","onSubmit","handleChange","indexOf","propTypes","func","isRequired","object","mapActionsToProps"],"mappings":"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","sourcesContent":["import './index.scss'\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport { fetchMoviesByKeyword } from '../../redux/actions/movies';\nimport { setFilters } from '../../redux/actions/ui';\n\n//ICONS\nimport { IoMdGrid, IoIosList } from 'react-icons/io';\n\nclass Header extends React.Component {\n    state = {\n        keyword: '',\n    }\n\n    handleChange = e => {\n        this.setState({ keyword: e.target.value })\n    }\n    onSubmit = e => {\n        e.preventDefault();\n        this.props.fetchMoviesByKeyword(this.state.keyword)\n            .catch(ex => {\n                alert('Something failed');\n                this.props.setFilters('popular')\n            });\n        this.setState({ keyword: '' })\n        this.props.setFilters('search')\n        this.handleOpen()\n    }\n    onLogoClick = () => {\n        this.props.setFilters('popular');\n        this.props.history.push(`/gridView/1`);\n        window.scrollTo(0, 0)\n    }\n\n    handleOpen = () => {\n        if (window.innerWidth < 1024) {\n            var burger = document.querySelector('.burger')\n            var nav = document.querySelector('#navMenu')\n            burger.classList.toggle('is-active')\n            nav.classList.toggle('navbar__menu--is-active')\n        }\n    }\n\n    render() {\n        const { location: { pathname } } = this.props;\n        const page = parseInt(pathname.split('/').pop(), 10);\n\n        return (\n            <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n                <div className='container'>\n                    <div className=\"navbar-brand\">\n                        <Link to='/gridView/1'>\n                            <img src={this.props.logo} className='navbar-brand__image' alt='logo' onClick={() => this.onLogoClick()} />\n                        </Link>\n                        <span className='navbar-burger burger is-vcentered' data-target='navMenu' onClick={(e) => { this.handleOpen() }}>\n                            <span></span>\n                            <span></span>\n                            <span></span>\n                        </span>\n                    </div>\n                    <div id='navMenu' className='navbar-menu'>\n                        <form onSubmit={this.onSubmit} className='navbar__form'>\n                            <input className=\"input is-rounded navbar__form__search is-vcentered\"\n                                type=\"text\" value={this.state.keyword}\n                                placeholder=\"Search Vivant Movie Database\"\n                                onChange={this.handleChange}>\n                            </input>\n                        </form>\n                        <div className='navbar__view navbar-end'>\n                            <Link to={`/gridView/${page}`} >\n                                <IoMdGrid className={pathname.indexOf('gridView') > 0 ? 'navbar__view__active' : 'navbar__view__non-active'}\n                                    onClick={(e) => { this.handleOpen(); window.scrollTo(0, 0) }} />\n                            </Link>\n                            <Link to={`/tableView/${page}`} >\n                                <IoIosList className={pathname.indexOf('tableView') > 0 ? 'navbar__view__active' : 'navbar__view__non-active'}\n                                    onClick={(e) => { this.handleOpen(); window.scrollTo(0, 0) }} />\n                            </Link>\n                        </div>\n\n                    </div>\n                </div>\n            </nav>\n        )\n    }\n}\n\nHeader.propTypes = {\n    setFilters: PropTypes.func.isRequired,\n    fetchMoviesByKeyword: PropTypes.func.isRequired,\n    location: PropTypes.object.isRequired\n}\n\nconst mapActionsToProps = {\n    setFilters,\n    fetchMoviesByKeyword\n};\n\nexport default connect(null, mapActionsToProps)(withRouter(Header));\n\n\n\n"]},"metadata":{},"sourceType":"module"}