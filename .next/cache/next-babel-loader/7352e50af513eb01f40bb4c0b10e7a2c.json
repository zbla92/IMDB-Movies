{"ast":null,"code":"var _jsxFileName = \"/Users/milanblaz/Documents/Projects/vivant_movies/src/components/Header/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport './index.scss';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter, Link } from 'react-router-dom';\nimport { fetchMoviesByKeyword } from '../../redux/actions/movies';\nimport { setFilters } from '../../redux/actions/ui'; //ICONS\n\nimport { IoMdGrid, IoIosList } from 'react-icons/io';\n\nclass Header extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      keyword: ''\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      this.setState({\n        keyword: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"onSubmit\", e => {\n      e.preventDefault();\n      this.props.fetchMoviesByKeyword(this.state.keyword).catch(ex => {\n        alert('Something failed');\n        this.props.setFilters('popular');\n      });\n      this.setState({\n        keyword: ''\n      });\n      this.props.setFilters('search');\n      this.handleOpen();\n    });\n\n    _defineProperty(this, \"onLogoClick\", () => {\n      // this.props.setFilters('popular');\n      // this.props.history.push(`/gridView/1`);\n      // window.scrollTo(0, 0);\n      console.log('onLogoClick');\n    });\n\n    _defineProperty(this, \"handleOpen\", () => {\n      // if (window.innerWidth < 1024) {\n      //     var burger = document.querySelector('.burger')\n      //     var nav = document.querySelector('#navMenu')\n      //     burger.classList.toggle('is-active')\n      //     nav.classList.toggle('navbar__menu--is-active')\n      // }\n      console.log('handleOpen');\n    });\n  }\n\n  render() {\n    const {\n      location: {\n        pathname\n      }\n    } = this.props;\n    const page = parseInt(pathname.split('/').pop(), 10);\n    return __jsx(\"nav\", {\n      className: \"navbar\",\n      role: \"navigation\",\n      \"aria-label\": \"main navigation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"navbar-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(Link, {\n      to: \"/gridView/1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: this.props.logo,\n      className: \"navbar-brand__image\",\n      alt: \"logo\",\n      onClick: () => this.onLogoClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), __jsx(\"span\", {\n      className: \"navbar-burger burger is-vcentered\",\n      \"data-target\": \"navMenu\",\n      onClick: e => {\n        this.handleOpen();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      id: \"navMenu\",\n      className: \"navbar-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"navbar__form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      className: \"input is-rounded navbar__form__search is-vcentered\",\n      type: \"text\",\n      value: this.state.keyword,\n      placeholder: \"Search Vivant Movie Database\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"navbar__view navbar-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(Link, {\n      to: `/gridView/${page}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, __jsx(IoMdGrid, {\n      className: pathname.indexOf('gridView') > 0 ? 'navbar__view__active' : 'navbar__view__non-active',\n      onClick: e => {\n        this.handleOpen();\n        window.scrollTo(0, 0);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), __jsx(Link, {\n      to: `/tableView/${page}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, __jsx(IoIosList, {\n      className: pathname.indexOf('tableView') > 0 ? 'navbar__view__active' : 'navbar__view__non-active',\n      onClick: e => {\n        this.handleOpen();\n        window.scrollTo(0, 0);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nHeader.propTypes = {\n  setFilters: PropTypes.func.isRequired,\n  fetchMoviesByKeyword: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired\n};\nconst mapActionsToProps = {\n  setFilters,\n  fetchMoviesByKeyword\n};\nexport default connect(null, mapActionsToProps)(withRouter(Header));","map":{"version":3,"sources":["/Users/milanblaz/Documents/Projects/vivant_movies/src/components/Header/index.js"],"names":["React","connect","PropTypes","withRouter","Link","fetchMoviesByKeyword","setFilters","IoMdGrid","IoIosList","Header","Component","keyword","e","setState","target","value","preventDefault","props","state","catch","ex","alert","handleOpen","console","log","render","location","pathname","page","parseInt","split","pop","logo","onLogoClick","onSubmit","handleChange","indexOf","window","scrollTo","propTypes","func","isRequired","object","mapActionsToProps"],"mappings":"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","sourcesContent":["import './index.scss';\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport { fetchMoviesByKeyword } from '../../redux/actions/movies';\nimport { setFilters } from '../../redux/actions/ui';\n\n//ICONS\nimport { IoMdGrid, IoIosList } from 'react-icons/io';\n\nclass Header extends React.Component {\n  state = {\n    keyword: ''\n  };\n\n  handleChange = e => {\n    this.setState({ keyword: e.target.value });\n  };\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.fetchMoviesByKeyword(this.state.keyword).catch(ex => {\n      alert('Something failed');\n      this.props.setFilters('popular');\n    });\n    this.setState({ keyword: '' });\n    this.props.setFilters('search');\n    this.handleOpen();\n  };\n  onLogoClick = () => {\n    // this.props.setFilters('popular');\n    // this.props.history.push(`/gridView/1`);\n    // window.scrollTo(0, 0);\n    console.log('onLogoClick');\n  };\n\n  handleOpen = () => {\n    // if (window.innerWidth < 1024) {\n    //     var burger = document.querySelector('.burger')\n    //     var nav = document.querySelector('#navMenu')\n    //     burger.classList.toggle('is-active')\n    //     nav.classList.toggle('navbar__menu--is-active')\n    // }\n    console.log('handleOpen');\n  };\n\n  render() {\n    const {\n      location: { pathname }\n    } = this.props;\n    const page = parseInt(pathname.split('/').pop(), 10);\n\n    return (\n      <nav className='navbar' role='navigation' aria-label='main navigation'>\n        <div className='container'>\n          <div className='navbar-brand'>\n            <Link to='/gridView/1'>\n              <img\n                src={this.props.logo}\n                className='navbar-brand__image'\n                alt='logo'\n                onClick={() => this.onLogoClick()}\n              />\n            </Link>\n            <span\n              className='navbar-burger burger is-vcentered'\n              data-target='navMenu'\n              onClick={e => {\n                this.handleOpen();\n              }}\n            >\n              <span></span>\n              <span></span>\n              <span></span>\n            </span>\n          </div>\n          <div id='navMenu' className='navbar-menu'>\n            <form onSubmit={this.onSubmit} className='navbar__form'>\n              <input\n                className='input is-rounded navbar__form__search is-vcentered'\n                type='text'\n                value={this.state.keyword}\n                placeholder='Search Vivant Movie Database'\n                onChange={this.handleChange}\n              ></input>\n            </form>\n            <div className='navbar__view navbar-end'>\n              <Link to={`/gridView/${page}`}>\n                <IoMdGrid\n                  className={\n                    pathname.indexOf('gridView') > 0\n                      ? 'navbar__view__active'\n                      : 'navbar__view__non-active'\n                  }\n                  onClick={e => {\n                    this.handleOpen();\n                    window.scrollTo(0, 0);\n                  }}\n                />\n              </Link>\n              <Link to={`/tableView/${page}`}>\n                <IoIosList\n                  className={\n                    pathname.indexOf('tableView') > 0\n                      ? 'navbar__view__active'\n                      : 'navbar__view__non-active'\n                  }\n                  onClick={e => {\n                    this.handleOpen();\n                    window.scrollTo(0, 0);\n                  }}\n                />\n              </Link>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  setFilters: PropTypes.func.isRequired,\n  fetchMoviesByKeyword: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired\n};\n\nconst mapActionsToProps = {\n  setFilters,\n  fetchMoviesByKeyword\n};\n\nexport default connect(null, mapActionsToProps)(withRouter(Header));\n"]},"metadata":{},"sourceType":"module"}