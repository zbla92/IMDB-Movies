{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/milanblaz/Documents/Projects/vivant_movies/src/components/Header/index.js\";\nvar __jsx = React.createElement;\nimport './index.scss';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter, Link } from 'react-router-dom';\nimport { fetchMoviesByKeyword } from '../../redux/actions/movies';\nimport { setFilters } from '../../redux/actions/ui'; //ICONS\n\nimport { IoMdGrid, IoIosList } from 'react-icons/io';\n\nclass Header extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      keyword: ''\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      // this.setState({ keyword: e.target.value });\n      console.log('handleChange');\n    });\n\n    _defineProperty(this, \"onSubmit\", e => {\n      e.preventDefault(); // this.props.fetchMoviesByKeyword(this.state.keyword).catch(ex => {\n      //   alert('Something failed');\n      //   this.props.setFilters('popular');\n      // });\n      // this.setState({ keyword: '' });\n      // this.props.setFilters('search');\n      // this.handleOpen();\n\n      console.log('onSubmit');\n    });\n\n    _defineProperty(this, \"onLogoClick\", () => {\n      // this.props.setFilters('popular');\n      // this.props.history.push(`/gridView/1`);\n      // window.scrollTo(0, 0);\n      console.log('onLogoClick');\n    });\n\n    _defineProperty(this, \"handleOpen\", () => {\n      // if (window.innerWidth < 1024) {\n      //     var burger = document.querySelector('.burger')\n      //     var nav = document.querySelector('#navMenu')\n      //     burger.classList.toggle('is-active')\n      //     nav.classList.toggle('navbar__menu--is-active')\n      // }\n      console.log('handleOpen');\n    });\n  }\n\n  render() {\n    const {\n      location: {\n        pathname\n      }\n    } = this.props;\n\n    const page = _parseInt(pathname.split('/').pop(), 10);\n\n    return __jsx(\"nav\", {\n      className: \"navbar\",\n      role: \"navigation\",\n      \"aria-label\": \"main navigation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"navbar-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(Link, {\n      to: \"/gridView/1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: this.props.logo,\n      className: \"navbar-brand__image\",\n      alt: \"logo\",\n      onClick: () => this.onLogoClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), __jsx(\"span\", {\n      className: \"navbar-burger burger is-vcentered\",\n      \"data-target\": \"navMenu\",\n      onClick: e => {\n        this.handleOpen();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      id: \"navMenu\",\n      className: \"navbar-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"navbar__form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      className: \"input is-rounded navbar__form__search is-vcentered\",\n      type: \"text\",\n      value: this.state.keyword,\n      placeholder: \"Search Vivant Movie Database\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"navbar__view navbar-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, __jsx(Link, {\n      to: \"/gridView/\".concat(page),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, __jsx(IoMdGrid, {\n      className: pathname.indexOf('gridView') > 0 ? 'navbar__view__active' : 'navbar__view__non-active',\n      onClick: e => {\n        this.handleOpen();\n        window.scrollTo(0, 0);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), __jsx(Link, {\n      to: \"/tableView/\".concat(page),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, __jsx(IoIosList, {\n      className: pathname.indexOf('tableView') > 0 ? 'navbar__view__active' : 'navbar__view__non-active',\n      onClick: e => {\n        this.handleOpen();\n        window.scrollTo(0, 0);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nHeader.propTypes = {\n  setFilters: PropTypes.func.isRequired,\n  fetchMoviesByKeyword: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired\n};\nconst mapActionsToProps = {\n  setFilters,\n  fetchMoviesByKeyword\n};\nexport default connect(null, mapActionsToProps)(withRouter(Header));","map":{"version":3,"sources":["/Users/milanblaz/Documents/Projects/vivant_movies/src/components/Header/index.js"],"names":["React","connect","PropTypes","withRouter","Link","fetchMoviesByKeyword","setFilters","IoMdGrid","IoIosList","Header","Component","keyword","e","console","log","preventDefault","render","location","pathname","props","page","split","pop","logo","onLogoClick","handleOpen","onSubmit","state","handleChange","indexOf","window","scrollTo","propTypes","func","isRequired","object","mapActionsToProps"],"mappings":"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","sourcesContent":["import './index.scss';\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport { fetchMoviesByKeyword } from '../../redux/actions/movies';\nimport { setFilters } from '../../redux/actions/ui';\n\n//ICONS\nimport { IoMdGrid, IoIosList } from 'react-icons/io';\n\nclass Header extends React.Component {\n  state = {\n    keyword: ''\n  };\n\n  handleChange = e => {\n    // this.setState({ keyword: e.target.value });\n    console.log('handleChange');\n  };\n  onSubmit = e => {\n    e.preventDefault();\n    // this.props.fetchMoviesByKeyword(this.state.keyword).catch(ex => {\n    //   alert('Something failed');\n    //   this.props.setFilters('popular');\n    // });\n    // this.setState({ keyword: '' });\n    // this.props.setFilters('search');\n    // this.handleOpen();\n    console.log('onSubmit');\n  };\n  onLogoClick = () => {\n    // this.props.setFilters('popular');\n    // this.props.history.push(`/gridView/1`);\n    // window.scrollTo(0, 0);\n    console.log('onLogoClick');\n  };\n\n  handleOpen = () => {\n    // if (window.innerWidth < 1024) {\n    //     var burger = document.querySelector('.burger')\n    //     var nav = document.querySelector('#navMenu')\n    //     burger.classList.toggle('is-active')\n    //     nav.classList.toggle('navbar__menu--is-active')\n    // }\n    console.log('handleOpen');\n  };\n\n  render() {\n    const {\n      location: { pathname }\n    } = this.props;\n    const page = parseInt(pathname.split('/').pop(), 10);\n\n    return (\n      <nav className='navbar' role='navigation' aria-label='main navigation'>\n        <div className='container'>\n          <div className='navbar-brand'>\n            <Link to='/gridView/1'>\n              <img\n                src={this.props.logo}\n                className='navbar-brand__image'\n                alt='logo'\n                onClick={() => this.onLogoClick()}\n              />\n            </Link>\n            <span\n              className='navbar-burger burger is-vcentered'\n              data-target='navMenu'\n              onClick={e => {\n                this.handleOpen();\n              }}\n            >\n              <span></span>\n              <span></span>\n              <span></span>\n            </span>\n          </div>\n          <div id='navMenu' className='navbar-menu'>\n            <form onSubmit={this.onSubmit} className='navbar__form'>\n              <input\n                className='input is-rounded navbar__form__search is-vcentered'\n                type='text'\n                value={this.state.keyword}\n                placeholder='Search Vivant Movie Database'\n                onChange={this.handleChange}\n              ></input>\n            </form>\n            <div className='navbar__view navbar-end'>\n              <Link to={`/gridView/${page}`}>\n                <IoMdGrid\n                  className={\n                    pathname.indexOf('gridView') > 0\n                      ? 'navbar__view__active'\n                      : 'navbar__view__non-active'\n                  }\n                  onClick={e => {\n                    this.handleOpen();\n                    window.scrollTo(0, 0);\n                  }}\n                />\n              </Link>\n              <Link to={`/tableView/${page}`}>\n                <IoIosList\n                  className={\n                    pathname.indexOf('tableView') > 0\n                      ? 'navbar__view__active'\n                      : 'navbar__view__non-active'\n                  }\n                  onClick={e => {\n                    this.handleOpen();\n                    window.scrollTo(0, 0);\n                  }}\n                />\n              </Link>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  setFilters: PropTypes.func.isRequired,\n  fetchMoviesByKeyword: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired\n};\n\nconst mapActionsToProps = {\n  setFilters,\n  fetchMoviesByKeyword\n};\n\nexport default connect(null, mapActionsToProps)(withRouter(Header));\n"]},"metadata":{},"sourceType":"module"}