{"ast":null,"code":"var _jsxFileName = \"/Users/milanblaz/Documents/Projects/vivant_movies/src/components/Pagination/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport './index.scss';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetchMoviesByFilter } from '../../redux/actions/movies';\n\nclass Pagination extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"generateButton\", (btnPage, isDisabled, numOfPages, name = btnPage, className = '') => {\n      // This function is used to generate pagination button. \n      //btnPage = expression that resolves buttons number (page number)\n      // isDisabled = true or false - rendering button clickable or not\n      // numOfPages = Total number of pages fetched for the current filter\n      //name = rendered name for the button, usually number, next || prev\n      // className =  passing additional styling to particular button\n      const viewType = this.props.location.pathname.split('View')[0] + 'View';\n\n      if (btnPage >= 1 && btnPage <= numOfPages || name === 'Prev' || name === 'Next') {\n        return __jsx(\"button\", {\n          className: `button pagination__button ${className}`,\n          disabled: isDisabled,\n          key: name,\n          onClick: () => {\n            this.props.history.push(`${viewType}/${btnPage}`);\n            window.scrollTo(0, 0);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, name);\n      } else return null;\n    });\n  }\n\n  render() {\n    const {\n      numOfPages,\n      page: currentPage\n    } = this.props;\n\n    const dots = __jsx(\"span\", {\n      className: \"pagination-ellipsis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"\\u2026\");\n\n    return __jsx(\"div\", {\n      className: \"buttons pagination\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.generateButton(currentPage - 1, currentPage > 1 ? false : true, numOfPages, 'Prev', 'pagination__button__next'), this.generateButton(currentPage > 2 ? 1 : null, false, numOfPages), currentPage > 2 ? dots : null, this.generateButton(window.innerWidth < 600 ? null : currentPage - 1, false, numOfPages), this.generateButton(currentPage, true, numOfPages, currentPage, 'pagination__button--is-active'), this.generateButton(window.innerWidth < 600 ? null : currentPage + 1, false, numOfPages), currentPage < numOfPages - 1 ? dots : null, this.generateButton(currentPage < numOfPages - 1 ? numOfPages : null, false, numOfPages), this.generateButton(currentPage + 1, currentPage < numOfPages ? false : true, numOfPages, 'Next', 'pagination__button__prev'));\n  }\n\n}\n\nPagination.defaultProps = {\n  currentPage: 1\n};\nPagination.propTypes = {\n  ui: PropTypes.object.isRequired,\n  fetchMoviesByFilter: PropTypes.func.isRequired,\n  numOfPages: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  ui: state.UI,\n  numOfPages: state.data.numOfPages\n});\n\nconst mapActionsToProps = {\n  fetchMoviesByFilter\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withRouter(Pagination));","map":{"version":3,"sources":["/Users/milanblaz/Documents/Projects/vivant_movies/src/components/Pagination/index.js"],"names":["React","PropTypes","connect","withRouter","fetchMoviesByFilter","Pagination","Component","btnPage","isDisabled","numOfPages","name","className","viewType","props","location","pathname","split","history","push","window","scrollTo","render","page","currentPage","dots","generateButton","innerWidth","defaultProps","propTypes","ui","object","isRequired","func","number","mapStateToProps","state","UI","data","mapActionsToProps"],"mappings":"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","sourcesContent":["import './index.scss';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\n\nimport { fetchMoviesByFilter } from '../../redux/actions/movies';\n\n\nclass Pagination extends React.Component {\n\n    generateButton = (btnPage, isDisabled, numOfPages, name = btnPage, className = '') => {\n        // This function is used to generate pagination button. \n        //btnPage = expression that resolves buttons number (page number)\n        // isDisabled = true or false - rendering button clickable or not\n        // numOfPages = Total number of pages fetched for the current filter\n        //name = rendered name for the button, usually number, next || prev\n        // className =  passing additional styling to particular button\n        const viewType = this.props.location.pathname.split('View')[0] + 'View';\n        if ((btnPage >= 1 && btnPage <= numOfPages) || name === 'Prev' || name === 'Next') {\n            return (\n                <button className={`button pagination__button ${className}`}\n                    disabled={isDisabled}\n                    key={name}\n                    onClick={() => {\n                        this.props.history.push(`${viewType}/${btnPage}`)\n                        window.scrollTo(0, 0)\n                    }}>\n                    {name}\n                </button>\n            )\n        } else return null\n    }\n\n    render() {\n        const { numOfPages, page: currentPage } = this.props;\n        const dots = <span className=\"pagination-ellipsis\">&hellip;</span>;\n\n        return (\n            <div className='buttons pagination'>\n                {/** PREV PAGE -- far right */}\n                {this.generateButton(currentPage - 1, currentPage > 1 ? false : true, numOfPages, 'Prev', 'pagination__button__next')}\n                {/*Button that appears to be -10 pages from current page*/}\n                {this.generateButton(currentPage > 2 ? 1 : null, false, numOfPages)}\n                {currentPage > 2 ? dots : null}\n                {/*Button that appears to be -1 pages from current page*/}\n                {this.generateButton(window.innerWidth < 600 ? null : currentPage - 1, false, numOfPages)}\n                {/** Current page */}\n                {this.generateButton(currentPage, true, numOfPages, currentPage, 'pagination__button--is-active')}\n                {/* Next Page*/}\n                {this.generateButton(window.innerWidth < 600 ? null : currentPage + 1, false, numOfPages)}\n                {/** +10 pages */}\n                {currentPage < numOfPages - 1 ? dots : null}\n                {this.generateButton(currentPage < numOfPages - 1 ? numOfPages : null, false, numOfPages)}\n                {/** NEXT PAGE - far left */}\n                {this.generateButton(currentPage + 1, currentPage < numOfPages ? false : true, numOfPages, 'Next', 'pagination__button__prev')}\n            </div>\n        )\n\n    }\n}\nPagination.defaultProps = {\n    currentPage: 1\n};\n\nPagination.propTypes = {\n    ui: PropTypes.object.isRequired,\n    fetchMoviesByFilter: PropTypes.func.isRequired,\n    numOfPages: PropTypes.number.isRequired,\n    page: PropTypes.number.isRequired\n}\n\nconst mapStateToProps = state => ({\n    ui: state.UI,\n    numOfPages: state.data.numOfPages\n})\nconst mapActionsToProps = {\n    fetchMoviesByFilter\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(withRouter(Pagination));"]},"metadata":{},"sourceType":"module"}