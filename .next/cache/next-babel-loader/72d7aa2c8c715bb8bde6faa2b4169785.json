{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/milanblaz/Documents/Projects/vivant_movies/src/components/MovieList/TableView/TableView.js\";\nvar __jsx = React.createElement;\nimport '../index.scss';\nimport React from 'react';\nimport MovieRow from '../../MovieRow/MovieRow';\nimport Pagination from '../../Pagination';\n\nclass TableView extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      movies: this.props.movies\n    });\n\n    _defineProperty(this, \"sortMoviesByYear\", movies => {\n      const sorted = movies.slice().sort((a, b) => {\n        return a.release_date > b.release_date ? -1 : a.release_date < b.release_date ? 1 : 0;\n      });\n      this.setState({\n        movies: sorted\n      });\n    });\n\n    _defineProperty(this, \"sortMoviesAlphabetically\", movies => {\n      const sorted = movies.slice().sort((a, b) => {\n        const movieA = a.title.charAt(0);\n        const movieB = b.title.charAt(0);\n        return movieA < movieB ? -1 : movieA > movieB ? 1 : 0;\n      });\n      this.setState({\n        movies: sorted\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.clearErrors();\n  }\n\n  render() {\n    if (this.props.errors) {\n      alert(this.props.errors);\n      window.location.reload();\n    }\n\n    const renderMovies = () => this.state.movies.map(movie => {\n      return __jsx(MovieRow, {\n        title: movie.title,\n        year: movie.release_date,\n        key: movie.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    });\n\n    return __jsx(\"div\", {\n      className: \"container  table-view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(\"table\", {\n      className: \"table is-hoverable table-view__table table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      className: \"table-view__title has-text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"table-view__span\",\n      onClick: () => this.sortMoviesAlphabetically(this.props.movies),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Title\", __jsx(\"span\", {\n      className: \"table-view__tooltiptext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Sort by name\"))), __jsx(\"th\", {\n      className: \"table-view__year has-text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"table-view__span\",\n      onClick: () => this.sortMoviesByYear(this.props.movies),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Year\", __jsx(\"span\", {\n      className: \"table-view__tooltiptext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Sort by year\"))))), __jsx(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, renderMovies())), this.props.numOfPages > 1 ? __jsx(Pagination, {\n      page: this.props.page,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default TableView;","map":{"version":3,"sources":["/Users/milanblaz/Documents/Projects/vivant_movies/src/components/MovieList/TableView/TableView.js"],"names":["React","MovieRow","Pagination","TableView","Component","movies","props","sorted","slice","sort","a","b","release_date","setState","movieA","title","charAt","movieB","componentWillUnmount","clearErrors","render","errors","alert","window","location","reload","renderMovies","state","map","movie","id","sortMoviesAlphabetically","sortMoviesByYear","numOfPages","page"],"mappings":"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","sourcesContent":["import '../index.scss'\nimport React from 'react';\n\nimport MovieRow from '../../MovieRow/MovieRow';\nimport Pagination from '../../Pagination';\n\nclass TableView extends React.Component {\n    state = {\n        movies: this.props.movies\n    }\n    componentWillUnmount() {\n        this.props.clearErrors()\n    }\n\n    sortMoviesByYear = movies => {\n        const sorted = movies.slice().sort((a, b) => {\n            return a.release_date > b.release_date ? -1 : a.release_date < b.release_date ? 1 : 0\n        })\n        this.setState({ movies: sorted })\n    }\n\n    sortMoviesAlphabetically = movies => {\n        const sorted = movies.slice().sort((a, b) => {\n            const movieA = a.title.charAt(0);\n            const movieB = b.title.charAt(0);\n            return movieA < movieB ? -1 : movieA > movieB ? 1 : 0\n        });\n\n        this.setState({ movies: sorted })\n    }\n\n    render() {\n        if (this.props.errors) {\n            alert(this.props.errors)\n            window.location.reload()\n        }\n        const renderMovies = () => this.state.movies.map(movie => {\n            return <MovieRow title={movie.title} year={movie.release_date} key={movie.id} />\n        })\n        return (\n            <div className='container  table-view'>\n                <table className='table is-hoverable table-view__table table'>\n                    <thead>\n                        <tr>\n                            <th className='table-view__title has-text-left' >\n                                <span className='table-view__span'\n                                    onClick={() => this.sortMoviesAlphabetically(this.props.movies)}>\n                                    Title\n                                    <span className=\"table-view__tooltiptext\">\n                                        Sort by name\n                                    </span>\n                                </span>\n                            </th>\n                            <th className='table-view__year has-text-right'>\n                                <span className='table-view__span'\n                                    onClick={() => this.sortMoviesByYear(this.props.movies)}>\n                                    Year\n                                    <span className=\"table-view__tooltiptext\">\n                                        Sort by year\n                                    </span>\n                                </span>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {renderMovies()}\n                    </tbody>\n                </table>\n                {this.props.numOfPages > 1 ? <Pagination page={this.props.page} /> : null}\n            </div>\n        )\n    }\n}\nexport default TableView"]},"metadata":{},"sourceType":"module"}