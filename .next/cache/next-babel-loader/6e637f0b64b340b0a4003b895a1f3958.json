{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/milanblaz/Documents/Projects/vivant_movies/src/components/MovieList/GridView/GridView.js\";\nvar __jsx = React.createElement;\nimport '../index.scss';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieCard from '../../MovieCard/MovieCard';\nimport Pagination from '../../Pagination';\n\nclass GridView extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      insertRowEvery: 5\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.clearErrors();\n  }\n\n  renderMovies(movies) {\n    const rendered = movies.map(({\n      id,\n      poster_path,\n      title,\n      release_date,\n      vote_average\n    }) => {\n      const imageUrl = \"https://image.tmdb.org/t/p/w300_and_h450_bestv2\".concat(poster_path);\n      return __jsx(MovieCard, {\n        imageUrl: imageUrl,\n        title: title,\n        year: release_date,\n        vote_average: vote_average,\n        key: id,\n        id: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    });\n    return rendered;\n  }\n\n  render() {\n    if (this.props.errors) {\n      alert(this.props.errors);\n      window.location.reload();\n    }\n\n    return __jsx(\"div\", {\n      className: \"grid-view  animated fadeIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"grid-view__container container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.renderMovies(this.props.movies)), this.props.numOfPages > 1 ? __jsx(Pagination, {\n      page: this.props.page,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nGridView.propTypes = {\n  movies: PropTypes.array.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  numOfPages: PropTypes.number,\n  page: PropTypes.number\n};\nexport default GridView;","map":{"version":3,"sources":["/Users/milanblaz/Documents/Projects/vivant_movies/src/components/MovieList/GridView/GridView.js"],"names":["React","PropTypes","MovieCard","Pagination","GridView","Component","insertRowEvery","componentWillUnmount","props","clearErrors","renderMovies","movies","rendered","map","id","poster_path","title","release_date","vote_average","imageUrl","render","errors","alert","window","location","reload","numOfPages","page","propTypes","array","isRequired","func","number"],"mappings":";;;AAAA,OAAO,eAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC7B;AACNC,MAAAA,cAAc,EAAE;AADV,KAD6B;AAAA;;AAIrCC,EAAAA,oBAAoB,GAAG;AACrB,SAAKC,KAAL,CAAWC,WAAX;AACD;;AAEDC,EAAAA,YAAY,CAACC,MAAD,EAAS;AACnB,UAAMC,QAAQ,GAAGD,MAAM,CAACE,GAAP,CACf,CAAC;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,WAAN;AAAmBC,MAAAA,KAAnB;AAA0BC,MAAAA,YAA1B;AAAwCC,MAAAA;AAAxC,KAAD,KAA4D;AAC1D,YAAMC,QAAQ,4DAAqDJ,WAArD,CAAd;AACA,aACE,MAAC,SAAD;AACE,QAAA,QAAQ,EAAEI,QADZ;AAEE,QAAA,KAAK,EAAEH,KAFT;AAGE,QAAA,IAAI,EAAEC,YAHR;AAIE,QAAA,YAAY,EAAEC,YAJhB;AAKE,QAAA,GAAG,EAAEJ,EALP;AAME,QAAA,EAAE,EAAEA,EANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD,KAbc,CAAjB;AAeA,WAAOF,QAAP;AACD;;AACDQ,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKZ,KAAL,CAAWa,MAAf,EAAuB;AACrBC,MAAAA,KAAK,CAAC,KAAKd,KAAL,CAAWa,MAAZ,CAAL;AACAE,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKf,YAAL,CAAkB,KAAKF,KAAL,CAAWG,MAA7B,CADH,CADF,EAIG,KAAKH,KAAL,CAAWkB,UAAX,GAAwB,CAAxB,GACC,MAAC,UAAD;AAAY,MAAA,IAAI,EAAE,KAAKlB,KAAL,CAAWmB,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAEG,IANN,CADF;AAUD;;AAzCoC;;AA4CvCvB,QAAQ,CAACwB,SAAT,GAAqB;AACnBjB,EAAAA,MAAM,EAAEV,SAAS,CAAC4B,KAAV,CAAgBC,UADL;AAEnBrB,EAAAA,WAAW,EAAER,SAAS,CAAC8B,IAAV,CAAeD,UAFT;AAGnBJ,EAAAA,UAAU,EAAEzB,SAAS,CAAC+B,MAHH;AAInBL,EAAAA,IAAI,EAAE1B,SAAS,CAAC+B;AAJG,CAArB;AAOA,eAAe5B,QAAf","sourcesContent":["import '../index.scss';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MovieCard from '../../MovieCard/MovieCard';\nimport Pagination from '../../Pagination';\n\nclass GridView extends React.Component {\n  state = {\n    insertRowEvery: 5\n  };\n  componentWillUnmount() {\n    this.props.clearErrors();\n  }\n\n  renderMovies(movies) {\n    const rendered = movies.map(\n      ({ id, poster_path, title, release_date, vote_average }) => {\n        const imageUrl = `https://image.tmdb.org/t/p/w300_and_h450_bestv2${poster_path}`;\n        return (\n          <MovieCard\n            imageUrl={imageUrl}\n            title={title}\n            year={release_date}\n            vote_average={vote_average}\n            key={id}\n            id={id}\n          />\n        );\n      }\n    );\n    return rendered;\n  }\n  render() {\n    if (this.props.errors) {\n      alert(this.props.errors);\n      window.location.reload();\n    }\n    return (\n      <div className=\"grid-view  animated fadeIn\">\n        <div className=\"grid-view__container container\">\n          {this.renderMovies(this.props.movies)}\n        </div>\n        {this.props.numOfPages > 1 ? (\n          <Pagination page={this.props.page} />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nGridView.propTypes = {\n  movies: PropTypes.array.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  numOfPages: PropTypes.number,\n  page: PropTypes.number\n};\n\nexport default GridView;\n"]},"metadata":{},"sourceType":"module"}