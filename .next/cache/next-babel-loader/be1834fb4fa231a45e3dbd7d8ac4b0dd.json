{"ast":null,"code":"var _jsxFileName = \"/Users/milanblaz/Documents/Projects/vivant_movies/src/components/MovieList/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchMoviesByFilter } from '../../redux/actions/movies';\nimport { clearErrors } from '../../redux/actions/ui';\nimport { withRouter } from 'react-router-dom';\nimport GridView from './GridView/GridView';\nimport TableView from './TableView/TableView';\nimport GridSkeleton from '../../utils/Skeleton/GridSkeleton';\nimport TableSkeleton from '../../utils/Skeleton/TableSkeleton'; // class MovieList extends React.Component {\n//   componentDidMount() {\n//     if (this.props.movies.length < 1) {\n//       this.props\n//         .fetchMoviesByFilter(this.props.page, this.props.ui.filterBy)\n//         .catch(ex => {\n//           this.props.history.push('/');\n//         });\n//     }\n//   }\n//   componentDidUpdate(prevProps) {\n//     if (this.props.page !== prevProps.page) {\n//       this.props\n//         .fetchMoviesByFilter(this.props.page, this.props.ui.filterBy)\n//         .catch(err => {\n//           this.props.history.push('/');\n//         });\n//     }\n//   }\n//   render() {\n//     const { movies, numOfPages, clearErrors, page } = this.props;\n//     const { errors } = this.props.ui;\n//     if (this.props.ui.loading) {\n//       return (\n//         <div>\n//           {this.props.location.pathname.indexOf('gridView') > -1 ? (\n//             <GridSkeleton />\n//           ) : (\n//             <TableSkeleton />\n//           )}\n//         </div>\n//       );\n//     }\n//     if (this.props.type === 'grid') {\n//       return (\n//         <GridView\n//           movies={movies}\n//           errors={errors}\n//           clearErrors={clearErrors}\n//           numOfPages={numOfPages}\n//           page={page}\n//         />\n//       );\n//     } else {\n//       return (\n//         <TableView\n//           movies={movies}\n//           errors={errors}\n//           clearErrors={clearErrors}\n//           numOfPages={numOfPages}\n//           page={page}\n//         />\n//       );\n//     }\n//   }\n// }\n// MovieList.propTypes = {\n//   movies: PropTypes.array.isRequired,\n//   ui: PropTypes.object,\n//   numOfPages: PropTypes.number,\n//   clearErrors: PropTypes.func,\n//   page: PropTypes.number.isRequired\n// };\n// MovieList.defaultProps = {\n//   movies: []\n// };\n// const mapStateToProps = state => ({\n//   movies: state.data.movies,\n//   numOfPages: state.data.numOfPages,\n//   ui: state.UI\n// });\n// const mapActionsToProps = {\n//   fetchMoviesByFilter,\n//   clearErrors\n// };\n// export default connect(\n//   mapStateToProps,\n//   mapActionsToProps\n// )(withRouter(MovieList));\n\nfunction MovieList({\n  type\n}) {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"MOvie List $\", type);\n}\n\nexport default MovieList;","map":{"version":3,"sources":["/Users/milanblaz/Documents/Projects/vivant_movies/src/components/MovieList/index.js"],"names":["React","connect","PropTypes","fetchMoviesByFilter","clearErrors","withRouter","GridView","TableView","GridSkeleton","TableSkeleton","MovieList","type"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,mBAAT,QAAoC,4BAApC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,aAAP,MAA0B,oCAA1B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA6B;AAC3B,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkBA,IAAlB,CAAP;AACD;;AACD,eAAeD,SAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { fetchMoviesByFilter } from '../../redux/actions/movies';\nimport { clearErrors } from '../../redux/actions/ui';\nimport { withRouter } from 'react-router-dom';\n\nimport GridView from './GridView/GridView';\nimport TableView from './TableView/TableView';\nimport GridSkeleton from '../../utils/Skeleton/GridSkeleton';\nimport TableSkeleton from '../../utils/Skeleton/TableSkeleton';\n\n// class MovieList extends React.Component {\n//   componentDidMount() {\n//     if (this.props.movies.length < 1) {\n//       this.props\n//         .fetchMoviesByFilter(this.props.page, this.props.ui.filterBy)\n//         .catch(ex => {\n//           this.props.history.push('/');\n//         });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps) {\n//     if (this.props.page !== prevProps.page) {\n//       this.props\n//         .fetchMoviesByFilter(this.props.page, this.props.ui.filterBy)\n//         .catch(err => {\n//           this.props.history.push('/');\n//         });\n//     }\n//   }\n\n//   render() {\n//     const { movies, numOfPages, clearErrors, page } = this.props;\n//     const { errors } = this.props.ui;\n//     if (this.props.ui.loading) {\n//       return (\n//         <div>\n//           {this.props.location.pathname.indexOf('gridView') > -1 ? (\n//             <GridSkeleton />\n//           ) : (\n//             <TableSkeleton />\n//           )}\n//         </div>\n//       );\n//     }\n\n//     if (this.props.type === 'grid') {\n//       return (\n//         <GridView\n//           movies={movies}\n//           errors={errors}\n//           clearErrors={clearErrors}\n//           numOfPages={numOfPages}\n//           page={page}\n//         />\n//       );\n//     } else {\n//       return (\n//         <TableView\n//           movies={movies}\n//           errors={errors}\n//           clearErrors={clearErrors}\n//           numOfPages={numOfPages}\n//           page={page}\n//         />\n//       );\n//     }\n//   }\n// }\n\n// MovieList.propTypes = {\n//   movies: PropTypes.array.isRequired,\n//   ui: PropTypes.object,\n//   numOfPages: PropTypes.number,\n//   clearErrors: PropTypes.func,\n//   page: PropTypes.number.isRequired\n// };\n\n// MovieList.defaultProps = {\n//   movies: []\n// };\n\n// const mapStateToProps = state => ({\n//   movies: state.data.movies,\n//   numOfPages: state.data.numOfPages,\n//   ui: state.UI\n// });\n// const mapActionsToProps = {\n//   fetchMoviesByFilter,\n//   clearErrors\n// };\n\n// export default connect(\n//   mapStateToProps,\n//   mapActionsToProps\n// )(withRouter(MovieList));\n\nfunction MovieList({ type }) {\n  return <div>MOvie List ${type}</div>;\n}\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}